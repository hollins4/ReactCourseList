{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","courseName","courseGrade","couseID","courses","courseNameError","courseGradeError","editMode","event","this","setState","target","value","preventDefault","test","isNaN","courseArray","tempCourseID","Math","random","push","courseID","courseLocation","map","course","indexOf","editCourseName","editCourseGrade","removeDeletedCourse","filter","courseNameChange","bind","courseGradeChange","addCourse","deleteCourse","editCourse","updateCourse","React","Component","Highest","gradeList","high","max","Lowest","low","min","Average","sum","forEach","parseInt","length","ceil","FormPresentation","buttonDisplay","type","class","onClick","id","onChange","for","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2581cde7.chunk.js","sourcesContent":["import React from 'react';\nimport style from './css/style.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courseName: '',\n      courseGrade: '',\n      couseID: '',\n      courses: [],\n      courseNameError: '',\n      courseGradeError: '',\n      editMode: -1\n    };\n  }\n\n  courseNameChange(event) {\n    this.setState({courseName: event.target.value });\n  }\n\n  courseGradeChange(event) {\n    this.setState({courseGrade: event.target.value });\n  }\n\n  addCourse(event) {\n    event.preventDefault();\n    \n    if (/^\\s*$/.test(this.state.courseName) && /^\\s*$/.test(this.state.courseGrade)) {\n        this.setState({courseNameError: \"Must provide a course name\"});\n        this.setState({courseGradeError: \"Must provide a course grade\" });\n    } else if (/^\\s*$/.test(this.state.courseName)) {\n        this.setState({ courseNameError: \"Must provide a course name\" });\n        this.setState({ courseGradeError: \"\" }); \n    } else if (/^\\s*$/.test(this.state.courseGrade)) {\n        this.setState({ courseNameError: \"\" });\n        this.setState({ courseGradeError: \"Must provide a course grade\" });\n    } else if (isNaN(this.state.courseGrade) || this.state.courseGrade < 0 || this.state.courseGrade > 100) {\n        this.setState({ courseNameError: \"\" });\n        this.setState({ courseGradeError: \"Course grade must be a number between 0 - 100\" });\n    }\n    else {\n        \n        let courseArray = this.state.courses;\n        let tempCourseID = Math.random() * 100;\n        courseArray.push({ courseName: this.state.courseName, \n                           courseGrade: this.state.courseGrade,\n                           courseID: tempCourseID });\n        this.setState({ courses: courseArray, courseName: '', courseGrade: '' });\n        this.setState({ courseNameError: \"\", courseGradeError: \"\"});\n    }\n  }\n\n  editCourse(courseID) {\n    let courseLocation = this.state.courses.map(course => {return course.courseID }).indexOf(courseID);\n    let editCourseName = this.state.courses[courseLocation].courseName;\n    let editCourseGrade = this.state.courses[courseLocation].courseGrade;\n    \n    this.setState({ courseName: editCourseName});\n    this.setState({ courseGrade: editCourseGrade });\n    this.setState({ editMode: courseLocation }); \n  }\n\n  updateCourse(event) {\n    event.preventDefault();\n    let courseLocation = this.state.editMode;\n    \n    if (/^\\s*$/.test(this.state.courseName) && /^\\s*$/.test(this.state.courseGrade)) {\n      this.setState({ courseNameError: \"Must provide a course name\" });\n      this.setState({ courseGradeError: \"Must provide a course grade\" });\n      \n    } else if (/^\\s*$/.test(this.state.courseName)) {\n      this.setState({ courseNameError: \"Must provide a course name\" });\n      this.setState({ courseGradeError: \"\" });\n    } else if (/^\\s*$/.test(this.state.courseGrade)) {\n      this.setState({ courseNameError: \"\" });\n      this.setState({ courseGradeError: \"Must provide a course grade\" });\n    } else if (isNaN(this.state.courseGrade) || this.state.courseGrade < 0 || this.state.courseGrade > 100) {\n      this.setState({ courseNameError: \"\" });\n      this.setState({ courseGradeError: \"Course grade must be a number between 0 - 100\" });\n    }\n    else {\n\n      let courseArray = this.state.courses;\n\n      courseArray[courseLocation].courseName = this.state.courseName;\n      courseArray[courseLocation].courseGrade = this.state.courseGrade;\n      \n      this.setState({ courses: courseArray, courseName: '', courseGrade: '' });\n      this.setState({ courseNameError: \"\", courseGradeError: \"\", editMode: -1 });\n    }\n  }\n\n  deleteCourse(courseID) {\n    this.setState({ courseName: '', courseGrade: '', editMode: -1 });\n    let tempCourseArray = this.state.courses;\n\n    let removeDeletedCourse = tempCourseArray.filter((course) => {\n      return course.courseID !== courseID;\n    });\n    this.setState({courses: removeDeletedCourse});\n  }\n\n  render() {\n    return (\n      <FormPresentation \n        courseName={this.state.courseName}\n        courseGrade={this.state.courseGrade}\n        courses={this.state.courses}\n        courseNameError={this.state.courseNameError}\n        courseGradeError={this.state.courseGradeError}\n        courseNameChange={this.courseNameChange.bind(this)}\n        courseGradeChange={this.courseGradeChange.bind(this)} \n        addCourse={this.addCourse.bind(this)}\n        deleteCourse={this.deleteCourse.bind(this)}\n        editCourse={this.editCourse.bind(this)}\n        updateCourse={this.updateCourse.bind(this)}\n        editMode={this.state.editMode}\n      />\n    );\n  }\n}\n\nfunction Highest(courses) {\n    \n  let gradeList = courses.courses.map(course => {return course.courseGrade} );\n  let high = Math.max(...gradeList);\n  \n  if (high >= 0 && high <= 100)\n    return (high);\n  else  \n    return (\"\");\n}\n\nfunction Lowest(courses) {\n  let gradeList = courses.courses.map(course => { return course.courseGrade });\n  let low = Math.min(...gradeList);\n\n  if (low >= 0 && low <= 100)\n    return (low);\n  else\n    return (\"\");\n}\n\nfunction Average(courses) {\n  let sum = 0;\n  \n  courses.courses.forEach(course => {\n      sum += parseInt(course.courseGrade) / courses.courses.length;\n  });\n\n\n  if (sum !== 0)\n    return (Math.ceil(sum));\n  else \n    return (\"\");\n}\n\n\nclass FormPresentation extends React.Component {\n\n  render() {\n    var buttonDisplay\n    if (this.props.editMode === -1) {\n      buttonDisplay = <input type=\"Button\" class=\"green lighten-1 btn-large\" value=\"Add Course\" onClick={this.props.addCourse.bind(this)} />\n    } else {\n      buttonDisplay = <input type=\"Button\" class=\"yellow accent-4 black-text btn-large\" value=\"Edit Course\" onClick={this.props.updateCourse.bind(this)} />\n    }\n\n    return(\n      <div class=\"container\">\n        <div class=\"row\">\n        <header class=\"centered offset-l1\">\n            <h1>Grade Calculator</h1>\n        </header>\n        \n          <fieldset class=\"col s11 offset-s1 l11 offset-l1 centered\">\n            <legend>Course Information</legend>\n            <br />\n            <div class=\"row\">\n              <div class=\"input-field col s6 col l6\">\n                <input type=\"text\"  id=\"courseName\"value={this.props.courseName} \n                    onChange={this.props.courseNameChange.bind(this)} /><br />\n                <label for=\"courseName\" >Course Name</label>\n                <p class=\"error\">{this.props.courseNameError}</p>\n              </div>\n              \n              <div class=\"input-field col s6 col l6\">\n                <input type=\"text\" class=\"validate\" id=\"courseGrade\"value={this.props.courseGrade} \n                  onChange={this.props.courseGradeChange.bind(this)} /><br />\n                <label for=\"courseGrade\">Grade</label>\n                <p class=\"error\">{this.props.courseGradeError}</p>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col offset-s4 s12 offset-l5 l12\">\n                {buttonDisplay}\n              </div>\n            </div> \n          </fieldset>\n        \n          <h4>Analytics</h4>\n          <table class=\"highlight striped centered\">\n            <thead>\n              <tr>\n                <th>Maximum Grade</th>\n                <th>Minimum Grade</th>\n                <th>Average Grade</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td><Highest courses={this.props.courses} /></td>\n                <td><Lowest courses={this.props.courses} /></td>\n                <td><Average courses={this.props.courses} /></td>\n              </tr>\n            </tbody>\n          </table>\n\n        <h4>Courses</h4>\n        <table class=\"highlight striped centered\">\n          <thead>\n            <tr>\n              <th>Course Name</th>\n              <th>Course Grade</th>\n              <th>Modify Course</th>\n              <th>Delete Course</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.courses.map(course => {\n            return (<tr key={course.courseID}> \n                      <td>{course.courseName}</td>\n                      <td>{course.courseGrade}</td>\n                      <td><a onClick={() => this.props.editCourse(course.courseID)}>\n                        <i class=\"material-icons medium edit\">edit</i></a></td>\n                      <td><a onClick={() => this.props.deleteCourse(course.courseID)}>\n                        <i class=\"material-icons medium delete\">delete</i></a></td>\n                    </tr>);\n          })}\n          </tbody>\n        </table>\n        <br />\n        \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}